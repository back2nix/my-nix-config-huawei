#!/usr/bin/env bash
set -x  # debug —Ä–µ–∂–∏–º
exec > /tmp/toggle-flip.log 2>&1  # –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª

STATE_FILE="/tmp/screen_rotation_state"
DOUBLE_CLICK_FILE="/tmp/power_double_click"
LOCK_FILE="/tmp/power_button_lock"
DOUBLE_CLICK_TIMEOUT_MS=250

echo "=== –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ ==="
echo "–í—Ä–µ–º—è: $(date)"
echo "PID: $$"
echo "USER: $USER"
echo "–ò—Å—Ö–æ–¥–Ω—ã–π DISPLAY: $DISPLAY"
echo "–ò—Å—Ö–æ–¥–Ω—ã–π XAUTHORITY: $XAUTHORITY"

# –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π DISPLAY –∏ XAUTHORITY –¥–ª—è —Ç–µ–∫—É—â–µ–π GNOME —Å–µ—Å—Å–∏–∏
# –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å gnome-shell —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
GNOME_SHELL_PID=$(pgrep -u $(id -u) gnome-shell | head -1)

if [ -z "$GNOME_SHELL_PID" ]; then
  echo "–û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å gnome-shell"
  exit 1
fi

echo "–ù–∞–π–¥–µ–Ω gnome-shell PID: $GNOME_SHELL_PID"

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ gnome-shell
export DISPLAY=$(grep -z ^DISPLAY= /proc/$GNOME_SHELL_PID/environ | cut -d= -f2- | tr -d '\0')
export XAUTHORITY=$(grep -z ^XAUTHORITY= /proc/$GNOME_SHELL_PID/environ | cut -d= -f2- | tr -d '\0')
export DBUS_SESSION_BUS_ADDRESS=$(grep -z ^DBUS_SESSION_BUS_ADDRESS= /proc/$GNOME_SHELL_PID/environ | cut -d= -f2- | tr -d '\0')

echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω DISPLAY: $DISPLAY"
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω XAUTHORITY: $XAUTHORITY"
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω DBUS_SESSION_BUS_ADDRESS: $DBUS_SESSION_BUS_ADDRESS"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ D-Bus
if ! gdbus call --session --dest org.gnome.Mutter.DisplayConfig --object-path /org/gnome/Mutter/DisplayConfig --method org.gnome.Mutter.DisplayConfig.GetCurrentState >/dev/null 2>&1; then
  echo "–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ D-Bus —Å–µ—Å—Å–∏–∏"
  exit 1
fi

echo "D-Bus —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
get_time_ms() {
  if command -v date >/dev/null 2>&1; then
    date +%s%3N 2>/dev/null || echo $(($(date +%s) * 1000))
  else
    echo $(($(date +%s) * 1000))
  fi
}

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π serial –æ—Ç Mutter DisplayConfig
get_serial() {
  gdbus call --session \
    --dest org.gnome.Mutter.DisplayConfig \
    --object-path /org/gnome/Mutter/DisplayConfig \
    --method org.gnome.Mutter.DisplayConfig.GetCurrentState | \
    awk '{print $2}' | tr -d ','
}

# –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–≤–æ—Ä–æ—Ç —á–µ—Ä–µ–∑ gdbus
apply_rotation() {
  local rotation=$1  # 0=normal, 1=left, 2=inverted, 3=right
  local serial=$(get_serial)

  echo "–ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–≤–æ—Ä–æ—Ç $rotation (serial: $serial)"

  gdbus call --session \
    --dest org.gnome.Mutter.DisplayConfig \
    --object-path /org/gnome/Mutter/DisplayConfig \
    --method org.gnome.Mutter.DisplayConfig.ApplyMonitorsConfig \
    $serial 1 \
    "[(0, 0, 1.0, uint32 $rotation, true, [('eDP-1', '2880x1800@60.000', {})])]" \
    "{}"

  local result=$?
  echo "–†–µ–∑—É–ª—å—Ç–∞—Ç gdbus: $result"
  return $result
}

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
block_keyboard() {
  echo "–ë–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É..."
  MAIN_KB_ID=$(xinput list | grep "AT Translated Set 2 keyboard" | grep -o 'id=[0-9]*' | cut -d= -f2)
  if [[ -n "$MAIN_KB_ID" ]]; then
    xinput disable "$MAIN_KB_ID" 2>/dev/null
    echo "$MAIN_KB_ID" > /tmp/blocked_keyboard_id
    echo "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (ID: $MAIN_KB_ID)"
  else
    echo "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"
  fi
}

# –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
unblock_keyboard() {
  echo "–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É..."
  if [ -f /tmp/blocked_keyboard_id ]; then
    KB_ID=$(cat /tmp/blocked_keyboard_id)
    xinput enable "$KB_ID" 2>/dev/null
    xset r on 2>/dev/null || true
    xinput set-prop "$KB_ID" "libinput Repeat" 1 2>/dev/null || true
    rm /tmp/blocked_keyboard_id
    echo "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (ID: $KB_ID)"
  else
    echo "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ"
  fi
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤–≤–æ–¥–∞
apply_input_transform() {
  local matrix="$1"
  echo "–ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é: $matrix"

  xinput list --short 2>/dev/null | grep -E "slave.*pointer|floating.*pointer" | while IFS= read -r line; do
    device_id=$(echo "$line" | grep -o 'id=[0-9]*' | cut -d= -f2)
    device_name=$(echo "$line" | sed 's/.*‚Ü≥[[:space:]]*//' | sed 's/[[:space:]]*id=.*//')
    if [[ -n "$device_id" ]]; then
      echo "  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $device_name (ID: $device_id)"
      xinput set-prop "$device_id" "Coordinate Transformation Matrix" $matrix 2>/dev/null || true
    fi
  done
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
perform_standard_rotation() {
  echo "=== perform_standard_rotation ==="

  if [ -f "$STATE_FILE" ]; then
    STATE_DATA=$(cat "$STATE_FILE")
    CURRENT_ROTATION=$(echo "$STATE_DATA" | cut -d'|' -f1)
    LAST_ACTION=$(echo "$STATE_DATA" | cut -d'|' -f2)
  else
    CURRENT_ROTATION="normal"
    LAST_ACTION="rotation"
  fi

  echo "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –ø–æ–≤–æ—Ä–æ—Ç=$CURRENT_ROTATION, –ø–æ—Å–ª–µ–¥–Ω–µ–µ_–¥–µ–π—Å—Ç–≤–∏–µ=$LAST_ACTION"

  if [ "$LAST_ACTION" = "keyboard_only" ]; then
    echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–º –±—ã–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º ==="
    unblock_keyboard
    echo "${CURRENT_ROTATION}|unlock_only" > "$STATE_FILE"
    MESSAGE="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞"
  else
    echo "=== –í—ã–ø–æ–ª–Ω—è–µ–º: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç —ç–∫—Ä–∞–Ω–∞ ==="

    case "$CURRENT_ROTATION" in
      "normal")
        NEXT_ROTATION="inverted"
        ROTATION_CODE=2
        MATRIX="-1 0 1 0 -1 1 0 0 1"
        MESSAGE="–≠–∫—Ä–∞–Ω –ø–æ–≤–µ—Ä–Ω—É—Ç –Ω–∞ 180¬∞"
        ;;
      "inverted")
        NEXT_ROTATION="normal"
        ROTATION_CODE=0
        MATRIX="1 0 0 0 1 0 0 0 1"
        MESSAGE="–≠–∫—Ä–∞–Ω –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ"
        ;;
      *)
        NEXT_ROTATION="normal"
        ROTATION_CODE=0
        MATRIX="1 0 0 0 1 0 0 0 1"
        MESSAGE="–≠–∫—Ä–∞–Ω —Å–±—Ä–æ—à–µ–Ω –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ"
        ;;
    esac

    echo "–ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —ç–∫—Ä–∞–Ω ($CURRENT_ROTATION -> $NEXT_ROTATION, –∫–æ–¥: $ROTATION_CODE)"

    # –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ gdbus
    if apply_rotation $ROTATION_CODE; then
      echo "–ü–æ–≤–æ—Ä–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω"
    else
      echo "–û–®–ò–ë–ö–ê: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–≤–æ—Ä–æ—Ç"
    fi

    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    sleep 0.3

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤–≤–æ–¥–∞
    apply_input_transform "$MATRIX"

    # –£–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    if [ "$NEXT_ROTATION" = "normal" ]; then
      unblock_keyboard
    else
      block_keyboard
    fi

    echo "${NEXT_ROTATION}|rotation" > "$STATE_FILE"
  fi

  echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç ==="
  echo "$MESSAGE"
  echo "================="
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ)
perform_keyboard_lock() {
  echo "=== perform_keyboard_lock ==="

  if [ -f "$STATE_FILE" ]; then
    STATE_DATA=$(cat "$STATE_FILE")
    CURRENT_ROTATION=$(echo "$STATE_DATA" | cut -d'|' -f1)
  else
    CURRENT_ROTATION="normal"
  fi

  echo "=== –î–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - —Ç–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ==="
  block_keyboard
  echo "${CURRENT_ROTATION}|keyboard_only" > "$STATE_FILE"
  MESSAGE="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (–¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ)"

  echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç ==="
  echo "$MESSAGE"
  echo "================="
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo "=== –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Power ==="
echo "–í—Ä–µ–º—è: $(date) ($(get_time_ms)ms)"

exec 200>"$LOCK_FILE"
if ! flock -n 200; then
  echo "–î—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ Power, –≤—ã—Ö–æ–¥"
  exit 0
fi

CURRENT_TIME_MS=$(get_time_ms)

if [ -f "$DOUBLE_CLICK_FILE" ]; then
  LAST_PRESS_MS=$(cat "$DOUBLE_CLICK_FILE")
  TIME_DIFF_MS=$((CURRENT_TIME_MS - LAST_PRESS_MS))

  echo "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –Ω–∞–∂–∞—Ç–∏—è: $LAST_PRESS_MS"
  echo "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $CURRENT_TIME_MS"
  echo "–†–∞–∑–Ω–∏—Ü–∞: ${TIME_DIFF_MS}–º—Å (–ª–∏–º–∏—Ç: ${DOUBLE_CLICK_TIMEOUT_MS}–º—Å)"

  if [ $TIME_DIFF_MS -le $DOUBLE_CLICK_TIMEOUT_MS ] && [ $TIME_DIFF_MS -ge 0 ]; then
    echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –î–í–û–ô–ù–û–ï –Ω–∞–∂–∞—Ç–∏–µ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: ${TIME_DIFF_MS}–º—Å)"
    rm "$DOUBLE_CLICK_FILE"
    perform_keyboard_lock
    flock -u 200
    exit 0
  else
    echo "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (${TIME_DIFF_MS}–º—Å)"
    if [ $TIME_DIFF_MS -lt 0 ]; then
      echo "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ - –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º"
    fi
  fi
fi

echo "$CURRENT_TIME_MS" > "$DOUBLE_CLICK_FILE"
echo "–ó–∞–ø–∏—Å–∞–Ω–æ –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è: $CURRENT_TIME_MS"

flock -u 200

echo "–û–∂–∏–¥–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤—Ç–æ—Ä–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è (${DOUBLE_CLICK_TIMEOUT_MS}–º—Å)..."
if command -v usleep >/dev/null 2>&1; then
  usleep $((DOUBLE_CLICK_TIMEOUT_MS * 1000))
elif python3 -c "import time; time.sleep(0.5)" 2>/dev/null; then
  python3 -c "import time; time.sleep(${DOUBLE_CLICK_TIMEOUT_MS}/1000.0)"
else
  sleep 1
fi

exec 200>"$LOCK_FILE"
if ! flock -n 200; then
  echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ"
  exit 0
fi

if [ -f "$DOUBLE_CLICK_FILE" ]; then
  SAVED_TIME_MS=$(cat "$DOUBLE_CLICK_FILE")

  if [ "$SAVED_TIME_MS" = "$CURRENT_TIME_MS" ]; then
    echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –û–î–ò–ù–ê–†–ù–û–ï –Ω–∞–∂–∞—Ç–∏–µ"
    rm "$DOUBLE_CLICK_FILE"
    perform_standard_rotation
  else
    echo "–§–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è (–±—ã–ª–æ: $CURRENT_TIME_MS, —Å—Ç–∞–ª–æ: $SAVED_TIME_MS) - –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º"
  fi
else
  echo "–§–∞–π–ª –∏—Å—á–µ–∑ - –±—ã–ª–æ –¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º"
fi

flock -u 200

find /tmp -name "power_double_click" -mmin +5 -delete 2>/dev/null || true
find /tmp -name "power_button_lock" -mmin +5 -delete 2>/dev/null || true

echo "=== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ ==="
