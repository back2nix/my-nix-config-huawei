#!/usr/bin/env bash

if [ -z "$XDG_RUNTIME_DIR" ]; then
    export XDG_RUNTIME_DIR="/run/user/$(id -u)"
fi

if [ -z "$WAYLAND_DISPLAY" ]; then
    export WAYLAND_DISPLAY="wayland-0"
fi

if [ -z "$DISPLAY" ]; then
    export DISPLAY=":0"
fi

export XDG_CURRENT_DESKTOP="GNOME"
export XDG_SESSION_TYPE="wayland"
export XDG_SESSION_DESKTOP="gnome"

STATE_FILE="/tmp/screen_rotation_state"
DOUBLE_CLICK_FILE="/tmp/power_double_click"
LOCK_FILE="/tmp/power_button_lock"
EVTEST_PIDS_FILE="/tmp/evtest_pids"
KEYBOARD_LOCK_FILE="/tmp/keyboard_locked"
DOUBLE_CLICK_TIMEOUT_MS=250

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å gsettings
get_actual_user() {
    ps aux | grep '[g]nome-shell' | head -1 | awk '{print $1}' || \
    ps aux | grep '[g]sd-' | head -1 | awk '{print $1}' || \
    echo "bg"
}

get_user_dbus_address() {
    local user="$1"
    local user_id=$(id -u "$user")

    local dbus_addr=$(ps aux | grep "dbus-daemon.*--session" | grep "$user" | head -1 | \
        sed -n 's/.*--address=\([^ ]*\).*/\1/p')

    if [ -n "$dbus_addr" ]; then
        echo "$dbus_addr"
    else
        echo "unix:path=/run/user/$user_id/bus"
    fi
}

run_as_user() {
    local user="$1"
    shift
    local user_id=$(id -u "$user" 2>/dev/null)
    local dbus_addr=$(get_user_dbus_address "$user")

    if [ -z "$user_id" ]; then
        echo "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $user"
        return 1
    fi

    sudo -u "$user" \
        XDG_RUNTIME_DIR="/run/user/$user_id" \
        WAYLAND_DISPLAY="wayland-0" \
        DISPLAY=":0" \
        XDG_CURRENT_DESKTOP="GNOME" \
        XDG_SESSION_TYPE="wayland" \
        XDG_SESSION_DESKTOP="gnome" \
        DBUS_SESSION_BUS_ADDRESS="$dbus_addr" \
        HOME="/home/$user" \
        USER="$user" \
        LOGNAME="$user" \
        "$@"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ gnome-randr –¥–æ—Å—Ç—É–ø–µ–Ω
if ! command -v gnome-randr >/dev/null 2>&1; then
  echo "–û—à–∏–±–∫–∞: gnome-randr –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: pip install gnome-randr"
  exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–ª–µ–π
DISPLAY_NAME=$(gnome-randr query 2>/dev/null | grep -E "^[a-zA-Z]+-[0-9]+" | head -1 | awk '{print $1}')
if [ -z "$DISPLAY_NAME" ]; then
  echo "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –¥–∏—Å–ø–ª–µ–π"
  echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∏—Å–ø–ª–µ–∏:"
  gnome-randr query 2>/dev/null | grep -E "^[a-zA-Z]+-[0-9]+"
  exit 1
fi

echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏—Å–ø–ª–µ–π: $DISPLAY_NAME"

ACTUAL_USER=$(get_actual_user)
echo "–û–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è gsettings: $ACTUAL_USER"

get_time_ms() {
  if command -v date >/dev/null 2>&1; then
    date +%s%3N 2>/dev/null || echo $(($(date +%s) * 1000))
  else
    echo $(($(date +%s) * 1000))
  fi
}

enable_screen_keyboard() {
    echo "–í–∫–ª—é—á–∞–µ–º —ç–∫—Ä–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $ACTUAL_USER..."
}

disable_screen_keyboard() {
    echo "–í—ã–∫–ª—é—á–∞–µ–º —ç–∫—Ä–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $ACTUAL_USER..."
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
is_keyboard_blocked() {
    [ -f "$KEYBOARD_LOCK_FILE" ] && pgrep -f "evtest --grab /dev/input/event1" >/dev/null 2>&1
}

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
block_keyboard() {
    echo "–ë–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É /dev/input/event1..."

    KEYBOARD_DEVICE="/dev/input/event1"

    # –ï—Å–ª–∏ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ - –≤—ã—Ö–æ–¥–∏–º
    if is_keyboard_blocked; then
        echo "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞"
        return 0
    fi

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    pkill -f "evtest --grab /dev/input/event1" 2>/dev/null || true
    rm -f "$EVTEST_PIDS_FILE" "$KEYBOARD_LOCK_FILE"
    sleep 0.2

    # –ó–∞–ø—É—Å–∫–∞–µ–º evtest –≤ —Ñ–æ–Ω–µ
    evtest --grab "$KEYBOARD_DEVICE" >/dev/null 2>&1 &
    EVTEST_PID=$!

    # –ñ–¥—ë–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤
    sleep 0.5
    if ! kill -0 "$EVTEST_PID" 2>/dev/null; then
        echo "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å evtest"
        return 1
    fi

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    echo "$EVTEST_PID" > "$EVTEST_PIDS_FILE"
    touch "$KEYBOARD_LOCK_FILE"
    echo "‚úì –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: $KEYBOARD_DEVICE (PID: $EVTEST_PID)"

    enable_screen_keyboard
    return 0
}

# –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
unblock_keyboard() {
    echo "–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É..."

    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å evtest
    if [ -f "$EVTEST_PIDS_FILE" ]; then
        PID=$(cat "$EVTEST_PIDS_FILE" 2>/dev/null)
        if [ -n "$PID" ] && kill "$PID" 2>/dev/null; then
            echo "‚úì –ó–∞–≤–µ—Ä—à–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å evtest PID: $PID"
        fi
    fi

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    pkill -f "evtest --grab /dev/input/event1" 2>/dev/null || true

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã
    rm -f "$EVTEST_PIDS_FILE" "$KEYBOARD_LOCK_FILE"

    disable_screen_keyboard
    echo "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞"
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
perform_standard_rotation() {
    if [ -f "$STATE_FILE" ]; then
        STATE_DATA=$(cat "$STATE_FILE")
        CURRENT_ROTATION=$(echo "$STATE_DATA" | cut -d'|' -f1)
        LAST_ACTION=$(echo "$STATE_DATA" | cut -d'|' -f2)
    else
        CURRENT_ROTATION="normal"
        LAST_ACTION="rotation"
    fi

    echo "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –ø–æ–≤–æ—Ä–æ—Ç=$CURRENT_ROTATION, –ø–æ—Å–ª–µ–¥–Ω–µ–µ_–¥–µ–π—Å—Ç–≤–∏–µ=$LAST_ACTION"

    if [ "$LAST_ACTION" = "keyboard_only" ]; then
        echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–º –±—ã–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º ==="
        unblock_keyboard
        echo "${CURRENT_ROTATION}|unlock_only" > "$STATE_FILE"
        MESSAGE="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞"
    else
        echo "=== –í—ã–ø–æ–ª–Ω—è–µ–º: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç —ç–∫—Ä–∞–Ω–∞ ==="

        case "$CURRENT_ROTATION" in
            "normal")
                NEXT_ROTATION="inverted"
                MESSAGE="–≠–∫—Ä–∞–Ω –ø–æ–≤–µ—Ä–Ω—É—Ç –Ω–∞ 180¬∞"
                ;;
            "inverted")
                NEXT_ROTATION="normal"
                MESSAGE="–≠–∫—Ä–∞–Ω –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ"
                ;;
            *)
                NEXT_ROTATION="normal"
                MESSAGE="–≠–∫—Ä–∞–Ω —Å–±—Ä–æ—à–µ–Ω –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ"
                ;;
        esac

        echo "–ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–∏—Å–ø–ª–µ–π: $DISPLAY_NAME ($CURRENT_ROTATION -> $NEXT_ROTATION)"

        if gnome-randr modify --rotate "$NEXT_ROTATION" "$DISPLAY_NAME"; then
            echo "–ü–æ–≤–æ—Ä–æ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"

            if [ "$NEXT_ROTATION" = "normal" ]; then
                unblock_keyboard
            else
                block_keyboard
            fi

            echo "${NEXT_ROTATION}|rotation" > "$STATE_FILE"
        else
            echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ —ç–∫—Ä–∞–Ω–∞"
            exit 1
        fi
    fi

    echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç ==="
    echo "$MESSAGE"
    echo "================="
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ)
perform_double_click_action() {
    if [ -f "$STATE_FILE" ]; then
        STATE_DATA=$(cat "$STATE_FILE")
        CURRENT_ROTATION=$(echo "$STATE_DATA" | cut -d'|' -f1)
    else
        CURRENT_ROTATION="normal"
    fi

    echo "=== –î–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - —Ç–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ==="

    block_keyboard
    echo "${CURRENT_ROTATION}|keyboard_only" > "$STATE_FILE"
    MESSAGE="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (–¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ)"

    echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç ==="
    echo "$MESSAGE"
    echo "================="
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo "=== –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Power ==="
echo "–í—Ä–µ–º—è: $(date) ($(get_time_ms)ms)"
echo "PID: $$"

exec 200>"$LOCK_FILE"
if ! flock -n 200; then
    echo "–î—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ Power, –≤—ã—Ö–æ–¥"
    exit 0
fi

CURRENT_TIME_MS=$(get_time_ms)

if [ -f "$DOUBLE_CLICK_FILE" ]; then
    LAST_PRESS_MS=$(cat "$DOUBLE_CLICK_FILE")
    TIME_DIFF_MS=$((CURRENT_TIME_MS - LAST_PRESS_MS))

    echo "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –Ω–∞–∂–∞—Ç–∏—è: $LAST_PRESS_MS"
    echo "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: $CURRENT_TIME_MS"
    echo "–†–∞–∑–Ω–∏—Ü–∞: ${TIME_DIFF_MS}–º—Å (–ª–∏–º–∏—Ç: ${DOUBLE_CLICK_TIMEOUT_MS}–º—Å)"

    if [ $TIME_DIFF_MS -le $DOUBLE_CLICK_TIMEOUT_MS ] && [ $TIME_DIFF_MS -ge 0 ]; then
        echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –î–í–û–ô–ù–û–ï –Ω–∞–∂–∞—Ç–∏–µ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: ${TIME_DIFF_MS}–º—Å)"
        rm "$DOUBLE_CLICK_FILE"
        perform_double_click_action
        flock -u 200
        exit 0
    else
        echo "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (${TIME_DIFF_MS}–º—Å)"
    fi
fi

echo "$CURRENT_TIME_MS" > "$DOUBLE_CLICK_FILE"
echo "–ó–∞–ø–∏—Å–∞–Ω–æ –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è: $CURRENT_TIME_MS"

flock -u 200

echo "–û–∂–∏–¥–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤—Ç–æ—Ä–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è (${DOUBLE_CLICK_TIMEOUT_MS}–º—Å)..."
if command -v usleep >/dev/null 2>&1; then
    usleep $((DOUBLE_CLICK_TIMEOUT_MS * 1000))
elif python3 -c "import time; time.sleep(0.5)" 2>/dev/null; then
    python3 -c "import time; time.sleep(${DOUBLE_CLICK_TIMEOUT_MS}/1000.0)"
else
    sleep 1
fi

exec 200>"$LOCK_FILE"
if ! flock -n 200; then
    echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ"
    exit 0
fi

if [ -f "$DOUBLE_CLICK_FILE" ]; then
    SAVED_TIME_MS=$(cat "$DOUBLE_CLICK_FILE")

    if [ "$SAVED_TIME_MS" = "$CURRENT_TIME_MS" ]; then
        echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –û–î–ò–ù–ê–†–ù–û–ï –Ω–∞–∂–∞—Ç–∏–µ"
        rm "$DOUBLE_CLICK_FILE"
        perform_standard_rotation
    else
        echo "–§–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è - –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º"
    fi
else
    echo "–§–∞–π–ª –∏—Å—á–µ–∑ - –±—ã–ª–æ –¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ"
fi

flock -u 200

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
find /tmp -name "power_double_click" -mmin +5 -delete 2>/dev/null || true
find /tmp -name "power_button_lock" -mmin +5 -delete 2>/dev/null || true
find /tmp -name "evtest_pids" -mmin +10 -delete 2>/dev/null || true
find /tmp -name "keyboard_locked" -mmin +10 -delete 2>/dev/null || true

echo "=== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ ==="
